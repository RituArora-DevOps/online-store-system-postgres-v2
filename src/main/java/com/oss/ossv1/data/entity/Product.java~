package com.oss.ossv1.data.entity;

import com.oss.ossv1.interfaces.Discountable;
import jakarta.persistence.*;  // Use Jakarta if using Spring Boot 3.x+, else javax.*

import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;

import java.io.Serializable;

@Entity
@Table(name = "products") // match actual table name (case-insensitive for SQL Server)
@Inheritance(strategy = InheritanceType.JOINED)
@Data
@NoArgsConstructor
@AllArgsConstructor
public abstract class Product implements Serializable, Discountable {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "product_id", nullable = false)
    private Integer id;

    @Column(name = "name", length = 100, nullable = false) // updated to 100 as per SQL
    private String name;

    @Column(name = "description", length = 255)
    private String description;

    @Column(name = "price", nullable = false)
    private double price;

    @Column(name = "category", nullable = false, length = 50)
    private String category;

    @Override
    public void applyDiscount(double percent) {
        if (percent < 0 || percent > 100) {
            throw new IllegalArgumentException("Discount must be between 0 and 100.");
        }
        this.price = this.price - (this.price * (percent / 100.0));
    }

    public abstract String displayInfo();

}
